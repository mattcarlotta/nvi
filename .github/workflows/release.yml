name: release

on:
  push:
    tags: ["v[0-9]+.[0-9]+.[0-9]+*"]
    # branches: ["main"]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  tagname:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.tag.outputs.tag }}
    steps:
      - if: github.event_name == 'push'
        run: |
          TAG_NAME=${{ github.ref }}
          echo "TAG_NAME=${TAG_NAME#refs/tags/}" >> $GITHUB_ENV

      - id: vars
        shell: bash
        run: echo "sha_short=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - id: tag
        run: echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT

  linux:
    runs-on: ubuntu-latest
    # container: ubuntu-latest
    needs: tagname
    env:
      RELEASE_TAG_NAME: ${{ needs.tagname.outputs.tag_name }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
          fetch-depth: 0

      # - name: install dependencies
      #   run: |
      #     apt-get -y update
      #     apt-get -y install cmake make curl clang++ g++ 

      - name: build
        run: |
          cmake -DCOMPILE_TESTS=ON .
          make

      - name: test
        run: |
          cd tests
          ./tests
          cd ../

      - name: compress
        run: |
          mkdir nvi
          cp ./src/nvi nvi/bin/
          cp ./docs/nvi.1 nvi/man/
          tar -zcvf ./nvi-linux-x86_64.tar.gz nvi

      - uses: actions/upload-artifact@v3
        with:
          name: nvi-linux
          path: |
            ./nvi-linux-x86_64.tar.gz
          retention-days: 1
  
  macos:
    runs-on: macos-12
    needs: tagname
    env:
      RELEASE_TAG_NAME: ${{ needs.tagname.outputs.tag_name }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
          fetch-depth: 0

      # - name: install dependencies
      #   run: |
      #     brew update
      #     brew install cmake make curl clang++ g++ 

      - name: build
        run: |
          cmake -DCOMPILE_TESTS=ON .
          make

      - name: test
        run: |
          cd tests
          ./tests
          cd ../

      - name: compress
        run: |
          mkdir nvi
          cp ./src/nvi nvi/bin/
          cp ./docs/nvi.1 nvi/man/
          tar -zcvf ./nvi-darwin-x86_64.tar.gz nvi

      - uses: actions/upload-artifact@v3
        with:
          name: nvi-darwin-x86_64
          path: |
            ./nvi-darwin-x86_64.tar.gz
          retention-days: 1

  # macos_aarch:
  #   runs-on: macos-13-xlarge
  #   needs: tagname
  #   env:
  #     RELEASE_TAG_NAME: ${{ needs.tagname.outputs.tag_name }}
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #       submodules: "recursive"

  #     # - name: install dependencies
  #     #   run: |
  #     #     brew update
  #     #     brew install cmake make curl clang++ g++ 

  #     - name: build
  #       run: |
  #         cmake -DCOMPILE_TESTS=ON .
  #         make

  #     - name: test
  #       run: |
  #         cd tests
  #         ./tests
  #         cd ../

  #     - name: compress
  #       run: |
  #         mkdir nvi
  #         cp ./src/nvi nvi/bin/
  #         cp ./docs/nvi.1 nvi/man/
  #         tar -zcvf ./nvi-darwin-aarch64.tar.gz nvi

  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: nvi-darwin-aarch64
  #         path: |
  #           ./nvi-darwin-aarch64.tar.gz
  #         retention-days: 1

  publish:
      if: github.event_name != 'pull_request'
      needs: [linux, macos] # macos_aarch
      runs-on: ubuntu-latest
      env:
        GH_REPO: ${{ github.repository }}
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      permissions:
        contents: write
      steps:
        - uses: actions/checkout@v4

        - uses: actions/download-artifact@v3

        - if: github.event_name == 'push'
          run: |
            TAG_NAME=${{ github.ref }}
            echo "TAG_NAME=${TAG_NAME#refs/tags/}" >> $GITHUB_ENV

        - id: tag
          run: |
            echo "SUBJECT=nvi release build" >> $GITHUB_ENV

        - name: publish release
          env:
            DEBUG: api
          run: |
            gh release create $TAG_NAME --title "$TAG_NAME" --target $GITHUB_SHA nvi-darwin-*/* nvi-linux-*/*
